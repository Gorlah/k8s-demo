name: Build

on:
  push:
    branches: [ 'main' ]
    tags: [ 'v*.*.*' ]
  pull_request:

env:
  IMAGE_NAME: k8s-demo
  DEPLOY_CLUSTER: coruscant-cluster
  DEPLOY_YML: deployment.yml
  DEPLOY_ZONE: us-central1-c
  BUILDER_IMAGE: paketobuildpacks/builder:base
  BUILDER_ENV: ''

defaults:
  run:
    shell: bash

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Inspect app
        id: inspect_app
        run: test -f gradlew && echo "::set-output name=build_gradle::true" || echo "::set-output name=build_gradle::false"
        
      - name: Gradle cache
        if: ${{ steps.inspect_app.outputs.build_gradle == 'true' }}
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle build
        if: ${{ steps.inspect_app.outputs.build_gradle == 'true' }}
        run: ./gradlew build --console=plain --no-daemon

      - name: Docker login
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pack
        if: ${{ github.event_name == 'push' }}
        uses: buildpacks/github-actions/setup-pack@v4.1.0
        
      - name: Build container
        if: ${{ github.event_name == 'push' }}
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$VERSION" | tr '[A-Z]' '[a-z]')

          # Pack build
          [[ -z ${BUILDER_ENV+x} ]] || args+=("-e $BUILDER_ENV")
          pack build $IMAGE_ID --publish --builder "$BUILDER_IMAGE" ${args[@]}

  deploy:
   if: github.event_name == 'push'
   needs: build
   runs-on: ubuntu-latest
   environment: production
   env:
     GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

   steps:
     - name: Checkout
       uses: actions/checkout@v2

     - name: Google Login
       run: >
         echo $GOOGLE_CREDENTIALS | gcloud auth activate-service-account --key-file -
         && gcloud config set project $(echo $GOOGLE_CREDENTIALS | jq -r '.project_id')
         && gcloud container clusters get-credentials $DEPLOY_CLUSTER --zone=$DEPLOY_ZONE

     - name: Deploy
       run: kubectl apply -f $DEPLOY_YML && kubectl rollout restart -f $DEPLOY_YML 2> /dev/null || true
